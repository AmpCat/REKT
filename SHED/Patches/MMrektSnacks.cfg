//REKT mk1A Escape Pod  -	-	-	-	-	-	-	-	-	-	-
@PART[rektmk1a]:NEEDS[Snacks]:FINAL  
{ 

// Short term habitation, 6 crew days of snacks.

	RESOURCE[Snacks] 
	{ 
		amount = 6 
		maxAmount = 6 
	} 
	MODULE:NEEDS[IndicatorLights]   
	{      
		name = ModuleScalarLevelIndicator  
		controllerName = SnacksLevel     	// Use minimum input value. Also supports "maximum" and "average"       
		operation = minimum      
		inputs = SnacksLevel, ElectricChargeLevel      
		highColor = $HighResource       
		mediumColor = $MediumResource      
		lowColor = $LowResource      
		criticalColor = pulsate($LowResource, 1200, 1, 0.6)     
	}     
	MODULE:NEEDS[IndicatorLights]     
	{        
		name = ModuleBooleanIndicator      	// Use logical AND of inputs.  Also supports "or" 
		operation = and       			// Note that you can put a "!" in front of a boolean input to invert it        
		inputs = SnacksEnabled, ElectricChargeEnabled       
		activeColor = SnacksLevel        
		inactiveColor = blink(dualLevel, 900, $Off, 300)        
		emissiveName = beacon      
	} 
}
//REKT mk1N Escape Pod -	-	-	-	-	-	-	-	-	-	-
@PART[rektmk1n]:NEEDS[Snacks]:FINAL  
{ 

// Short term habitation, 6 crew days of snacks.

	RESOURCE[Snacks] 
	{ 
		amount = 6 
		maxAmount = 6
	} 
	MODULE:NEEDS[IndicatorLights]  
	{    
		name = ModuleScalarLevelIndicator
		controllerName = SnacksLevel     	// Use minimum input value. Also supports "maximum" and "average"     
		operation = minimum    
		inputs = SnacksLevel, ElectricChargeLevel    
		highColor = $HighResource     
		mediumColor = $MediumResource    
		lowColor = $LowResource    
		criticalColor = pulsate($LowResource, 1200, 1, 0.6)    
	}    
	MODULE:NEEDS[IndicatorLights]    
	{      
		name = ModuleBooleanIndicator      	// Use logical AND of inputs.  Also supports "or" 
		operation = and   			// Note that you can put a "!" in front of a boolean input to invert it      
		inputs = SnacksEnabled, ElectricChargeEnabled     
		activeColor = SnacksLevel      
		inactiveColor = blink(dualLevel, 900, $Off, 300)      
		emissiveName = beacon     
	} 
}
//REKT mk1D Escape Pod -	-	-	-	-	-	-	-	-	-	- 
@PART[rektmk1d]:NEEDS[Snacks]:FINAL  
{ 

// Short term habitation, 30 crew days of snacks. more storage space as its missing all of the rocket parts, ar brake hydraulics and advanced avionic gubbins.

	RESOURCE[Snacks] 
	{ 
		amount = 30 
		maxAmount = 30 
	}
	MODULE:NEEDS[IndicatorLights]   
	{      
		name = ModuleScalarLevelIndicator  
		controllerName = SnacksLevel     	// Use minimum input value. Also supports "maximum" and "average"       
		operation = minimum      
		inputs = SnacksLevel, ElectricChargeLevel      
		highColor = $HighResource       
		mediumColor = $MediumResource      
		lowColor = $LowResource      
		criticalColor = pulsate($LowResource, 1200, 1, 0.6)     
	}     
	MODULE:NEEDS[IndicatorLights]     
	{       
		name = ModuleBooleanIndicator      	// Use logical AND of inputs.  Also supports "or" 
		operation = and       			// Note that you can put a "!" in front of a boolean input to invert it        
		inputs = SnacksEnabled, ElectricChargeEnabled       
		activeColor = SnacksLevel        
		inactiveColor = blink(dualLevel, 900, $Off, 300)        
		emissiveName = beacon      
	} 
}
